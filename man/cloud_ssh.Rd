% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssh.R
\name{cloud_ssh}
\alias{cloud_ssh}
\alias{cloud_ssh_download}
\alias{cloud_ssh_upload}
\title{Remotely execute ssh code, upload & download files.}
\usage{
cloud_ssh(instance, ..., key.pub = NULL, key.private = NULL, wait = TRUE,
  capture_text = "", username = "")

cloud_ssh_upload(instance, local, remote, wait = TRUE)

cloud_ssh_download(instance, remote, local, overwrite = FALSE, wait = TRUE)
}
\arguments{
\item{instance}{The Instance object}

\item{...}{List of parameters}

\item{key.pub}{The public SSH key}

\item{key.private}{The private SSH key}

\item{wait}{Whether then SSH output should be waited for or run it asynchronously.}

\item{capture_text}{Possible values are "", to the R console (the default), NULL or FALSE (discard output), TRUE (capture the output in a character vector) or a character string naming a file.}

\item{username}{The useranme}

\item{local, remote}{Local and remote paths.}

\item{overwrite}{If TRUE, will overwrite the local file if exists.}
}
\description{
Assumes that you have ssh & scp installed.  If on Windows see website and examples for workarounds.
}
\details{
Taken via https://github.com/cloudyr/googleComputeEngineR/blob/master/R/ssh.R



Only works connecting to linux based instances.

On Windows you will need to install an ssh command line client - see examples for an example using RStudio's built in client.

You will need to generate a new SSH key-pair if you have not connected to the instance before via say the gcloud SDK.

To customise SSH connection see \link{sparkler.create}

\code{capture_text} is passed to \code{stdout} and \code{stderr} of \link{system2}

Otherwise, instructions for generating SSH keys can be found here: \url{https://www.ovh.com/us/publiccloud/guides/g1769.creating_ssh_keys}.

Uploads and downloads are recursive, so if you specify a directory,
everything inside the directory will also be downloaded.
}
\examples{

\dontrun{

  # you need to instance a client for creating VM

  ## if running on Windows, use the RStudio default SSH client
  ## add C:\\Program Files\\RStudio\\bin\\msys-ssh-1000-18 to your PATH
  ## AND
  ## add C:\\Program Files\\RStudio\\bin\\msys-ssh-1000-18 to your RSTUDIO_SSH_PATH
  ## then run:

  regionVM <- "UK1"
  typeVM <- "s1-4"
  sshPubKeyPath  <- './.ssh/id_rsa.pub'
  sshPrivKeyPath <- './.ssh/id_rsa'
  vm <- createSparkler(client,regionVM,typeVM,sshPubKeyPath,sshPrivKeyPath)

  ## if you have already logged in via gcloud, the default keys will be used
  ## no need to run cloud_ssh_addkeys
  ## run command on instance
  cloud_ssh(vm, "pwd")
  #> /user/debian


}
}
\seealso{
Other ssh functions: \code{\link{cloud_ssh_addkeys}}
}

